<%version 1%>
<%description
    <b>Data: </b>Test Coverage<br>
    <b>Notes: </b>This report displays documents with traces to Test Cases along with a percentage of passed tests.<br>
%>
<%param 
    name="reporttitle" 
    type="String" 
    prompt="Report Title" 
    value="Test Coverage" 
    description="Descriptive title for your report."
%>
<%param
    name="reportheader" 
    type="MultiString" 
    prompt="Report Header" 
    value="" 
    description="Text appearing at the top of the report page."
%>
<%param
    name="reportfooter" 
    type="MultiString" 
    prompt="Report Footer" 
    value="" 
    description="Text appearing at the bottom of the report page."
%>
<html>

<head>
<script>
(function() {
   
    selectMultip = {
        register: function(id) {
            //大致思路是：为下拉选创建一个隐藏的子选项，每次单选之后将单选的值追加到隐藏的子选项中，并将子选项选中显示即可
            //全局查找所有标记multip的select
            document.querySelectorAll("[multip]").forEach(function(e) {
                render(e);
            })
        },
        reload: function(id, data, setData) {
            var htm = "";
            for(var i = 0; i < data.length; i++) {
                htm += '<option value="' + data[i].value + '">' + data[i].text + '</option>'
            }
            var e = document.getElementById(id);
            e.innerHTML = htm;
            render(e);
            this.setVal(id, setData);
        },
        setVal: function(id, str) {
            var type = Object.prototype.toString.call(str);
            switch(type) {
                case "[object String]":
                    document.getElementById(id).val = str;
                    break;
                case "[object Array]":
                    document.getElementById(id).val = str.toString();
                    break;
                default:
                    break;
            }
        },
        getVal: function(id) {
            return document.getElementById(id).val;
        },

    }

    function render(e) {
        e.param = {
            arr: [],
            valarr: [],
            opts: []
        };
        var choosevalue = "",
            op;

        for(var i = 0; i < e.length; i++) {
            op = e.item(i);
            e.param.opts.push(op);
            if(op.hasAttribute("choose")) {
                if(choosevalue == "") {
                    choosevalue = op.value
                } else {
                    choosevalue += "," + op.value;
                }

            }
        }

        //创建一个隐藏的option标签用来存储多选的值，其中的值为一个数组
        var option = document.createElement("option");
        option.hidden = true;
        e.appendChild(option);
        e.removeEventListener("input", selchange);
        e.addEventListener("input", selchange);

        //重新定义标签基础属性的get和set方法，实现取值和赋值的功能
        Object.defineProperty(e, "val", {
            get: function() {
                return this.querySelector("[hidden]").value;
            },
            set: function(value) {
                e.param.valarr = [];
                var valrealarr = value == "" ? [] : value.split(",");
                e.param.arr = [];
                e.param.opts.filter(function(o) {
                    o.style = "";
                });
                if(valrealarr.toString()) {
                    for(var i = 0; i < valrealarr.length; i++) {
                        e.param.opts.filter(function(o) {
                            if(o.value == valrealarr[i]) {
                                o.style = "color: blue;";
                                e.param.arr.push(o.text);
                                e.param.valarr.push(o.value)
                            }
                        });
                    }
                    this.options[e.length - 1].text = e.param.arr.toString();
                    this.options[e.length - 1].value = e.param.valarr.toString();
                    this.options[e.length - 1].selected = true;
                } else {
                    this.options[0].selected = true;
                }

            },
            configurable: true
        })
        //添加属性choose 此属性添加到option中用来指定默认值
        e.val = choosevalue;
        //添加属性tip 此属性添加到select标签上
        if(e.hasAttribute("tip") && !e.tiped) {
            e.tiped = true;
            e.insertAdjacentHTML('afterend', '<i style="color: red;font-size: 12px">*可多选</i>');
        }
    }

    function selchange() {
        var text = this.options[this.selectedIndex].text;
        var value = this.options[this.selectedIndex].value;
        this.options[this.selectedIndex].style = "color: blue;";
        var ind = this.param.arr.indexOf(text);
        if(ind > -1) {
            this.param.arr.splice(ind, 1);
            this.param.valarr.splice(ind, 1);
            this.param.opts.filter(function(o) {
                if(o.value == value) {
                    o.style = "";
                }
            });
        } else {
            this.param.arr.push(text);
            this.param.valarr.push(value);
        }
        this.options[this.length - 1].text = this.param.arr.toString();
        this.options[this.length - 1].value = this.param.valarr.toString();
        if(this.param.arr.length > 0) {
            this.options[this.length - 1].selected = true;
        } else {
            this.options[0].selected = true;
        }
    }
})();
</script>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
	<title>&reporttitle</title>
    <%screenStyleSheet%>
    <%printerStyleSheet%>
	<script type="text/javascript">
		var REPORT_ISSUES = "";
		var docData = [];//Documentid
		var CategoryData = [];//Category
		var ReleaseData = [];//Release
		var AllRelease =  [];
		var AllCategory =  [];
		var categorys = []; 
		var Releases = []; 
		var host = "http://192.168.6.130/:7001"; //本机
		//var host = "http://10.255.33.189/:7001"; //服务器
	</script>
	<style>
		
		.spanRight { float: right; margin-left: 30px;}
		
		.selectWid { width: 225px; border-radius: 5px;}
		.selectNarr { width: 124px; border-radius: 5px;}
	</style>
	
</head>
<%dateformat MM/dd/yy HH:mm:ss%>
<%datetimeformat MM/dd/yyyy h:mm:ss a%>
<%sortby &sortby%>
<body>
<table class="heading">
<tr>
	<td><%logoURL%></td>
	<td class="title_white" align="right" width="100%">&reporttitle</td>
	<td>&nbsp;</td>
</tr>
</table>
<table class="white_bg">
    <tr><td></td></tr>
</table>
<table width="100%" class="heading">
    <tr><td></td></tr>
</tr>
</table>
<p class="header">&reportheader</p>
<p class="date"><%currentdate%></p>
<p><a id="RERUNLINK"><img src= host + "/MKS_ALM_2009/refresh.gif"></a>
<span class="spanRight">
		<strong>Sample Phase: </strong>
		<select multip=""  class="selectRelease" id="Release" name="Release" style="width:210px;height: 30px;" >
			

		</select>
	</span>
	<span class="spanRight">
		<strong>Category: </strong>
		<select class="selectCategory" id="Category" name="Category" multip="" name="Release" style="width:210px;height: 30px;">
			

		</select>
	</span>
	<span class="spanRight">
		<strong> Document:</strong>
		<select class="selectWid" id="DocumentID" name="DocumentID" multip="" name="Release" style="width:310px;height: 30px;" >
			<option value="all"> - Please Select - </option>
		</select>
	</span>	
</p> 
<div style = "position: absolute; top: 120px; right: 10px;">
        <h4>All Related Test Coverage Rate : <span id="AllTest">00</span>%</h4>
		<h4>All Passed Coverage Rate : <span id="AllCoverage">00</span>%</h4>
</div>
<p style = "height: 21px;">

</p>
<%begindetail%>
<script type="text/javascript">

	if(REPORT_ISSUES == "") REPORT_ISSUES = <%<%builtin ID%>%>;
	else REPORT_ISSUES = REPORT_ISSUES+","+<%<%builtin ID%>%>;

    var selectDoc = {};
    selectDoc.value = "<%<%builtin ID%>%>";
    selectDoc.text = "<%<%builtin Type%>%>"+"<%<%builtin ID%>%>";
    docData.push(selectDoc);   
</script>

<style>
    .graph { 
        position: relative; /* IE is dumb */
        width: 200px; 
        border: 1px solid #B1D632; 
        padding: 2px; 
    }
    .graph .bar { 
        display: block;
        position: relative;
        background: #B1D632; 
        text-align: center; 
        color: #333; 
        height: 2em; 
        line-height: 2em;            
    }
    .graph .bar span { position: absolute; left: 1em; }
	
</style>





<h2 class="tabh" name ="<%<%builtin ID%>%>" id = "h2<%<%builtin ID%>%>">Test Coverage for <%<%builtin Type%>%>&nbsp;:&nbsp;<%<%builtin ID%>%></h2>

<table class="detailrows" name ="<%<%builtin ID%>%>" id = "<%<%builtin ID%>%>" >
	<tr>
		<th>ID</th>
		<th>Category</th>
		<th hidden>Releases</th>
		<th>Description</th> 
		<th>Tests</th>
		<th>% Passed</th> 
		<th hidden style="width: 120px;">Pass Percentage</th>
		<th hidden></th>
	</tr>
	<%beginrelationshipsdetail Query[(walkdocordered[<%<%builtin ID%>%>])]%><%filter%>(item is node)<%endfilter%>
		<script type="text/javascript">
		if ("<%Relationship Category%>" == "Heading" || "<%Relationship Category%>" == "Comment") {
			document.write('<tr class="odd_row">');
			
		} else {
			document.write('<tr class="even_row">');
		}
		</script>
			<td valign="top"><a href= host + "/im/WebClient?IssueID=<%Relationship ID%>"><%Relationship ID%></a></td>
			<td valign="top"><%Relationship Category%></td>
			<td  hidden class ="noData"><%Relationship Sample Phase%></td>
			<td valign="top"><%Relationship Text%></td>
			
			<script type="text/javascript">
			//保存数据
			
			Releases.push("<%Relationship Sample Phase%>");
			var row = {};
			row.docIds = "<%<%builtin ID%>%>";	
			row.Releases = "<%Relationship Sample Phase%>";
            AllRelease.push(row);
           	
			if ("<%Relationship Category%>" == "Heading" || "<%Relationship Category%>" == "Comment") {
				document.write('<td valign="top">&nbsp;</td><td valign="top">&nbsp;</td>');
			} else {
				//保存Category数据
				categorys.push("<%Relationship Category%>");
				var row1 = {}; //保存docmentId与的数据
				row1.docIds = "<%<%builtin ID%>%>";	
				row1.categorys = "<%Relationship Category%>";
				AllCategory.push(row1);
				 
				if("<%Relationship Validated By Trace Count%>" <= 0 | "<%Relationship Validated By Trace Count%>" == "" ){
					document.write('<td valign="top">0</td>');
					document.write('<td valign="top"><div class="graph"><strong class="bar" style="width:0px;">0</strong></div></td>');
				}else{
					document.write('<td valign="top"><%Relationship Validated By Trace Count%></td>')
					document.write('<td valign="top"><div class="graph"><strong class="bar" style="width:<%Relationship Validated By Pass Count%>;"><%Relationship Validated By Pass Percentage%></strong></div></td>');
				}
				document.write('<td valign="top" hidden><%Relationship Validated By Pass Count%></td>');
			}
			</script>
			 <td hidden valign="top"><%Pass Percentage%></td>
		</tr>
			
			

	<%endrelationshipsdetail%>
</table>

<%enddetail%>
<center class="footer">&reportfooter</center>

<script type="text/javascript">
        var sjcl = document.getElementsByClassName("noData");
		//字段空转换为nodata
		for(var i = 0;i<sjcl.length;i++){
			if(sjcl[i].innerHTML == "" || sjcl[i].innerHTML == "&nbsp;"){
				sjcl[i].innerHTML = "noData";
			}
		}
		//测试率
		searchAllTest();
		

		//初始化多选Documentselect
        selectMultip.register();
		//动态渲染Documentselect
		docData.unshift({"value":"all","text":"- Please Select -"});		
		selectMultip.reload("DocumentID", docData);
		
		//获取所有docmentid 赋值
        var selectDoc = document.getElementById('DocumentID');
			//获取所有的category 赋值
		var Category = document.getElementById('Category');
		var Release = document.getElementById('Release');
		//下拉选赋值
		CategorysSelect(qc(categorys));
		ReleasesSelect(qc(Releases));
		
		//Document下拉选绑定事件
		selectDoc.onchange = function(){
			event.stopPropagation();
    		// 通过对象获取value和text
            var key = this.value;
			
            if(key.indexOf("all") > -1){
				selectMultip.reload("DocumentID", docData);//动态渲染
                var docids ="all";
				//显示所有table和标题
                tablecz("all");
				//显示所有tr
				trcz("all");
				//下拉选赋值
				CategorysSelect(qc(categorys));
				ReleasesSelect(qc(Releases));
				//测试率
		        searchAllTest();
			
            } else {
				//console.log(categorys);
				//console.log(AllCategory);
				//获取docment匹配的数据
         
				//下拉选赋值
				CategorysSelect(qc(ldcategorys(key)));
				ReleasesSelect(qc(ldReleases(key)));
				//显示满足条件的table和所有tr
				tablecz(key);
				trcz("all");
			    //测试率
		        searchAllTest();
            }
			
			
            
    	};
		
		
		//category下拉选绑定事件
		Category.onchange = function(){
			//Release.value = "all";
    		// 通过对象获取value和text
            var category = this.value;
			var docid = document.getElementById('DocumentID').value;
			var releaseVal = document.getElementById('Category').value;
			if(docid == "all"){
				//显示所有table
				tablecz("all");
				if(category.indexOf("all") > -1 ){
					CategorysSelect(qc(categorys));//重置category select
					//ReleasesSelect(qc(Releases));
					
					if(releaseVal.indexOf("all") > -1 ){
						//显示所有tr
						trcz("all");
					}else {
						Releasetr(releaseVal);
						trcz("Part");//如果tr没有下拉选的值 不显示table
					}	
				}else {
					//ReleasesSelect(qc(Releases));
					if(releaseVal.indexOf("all") > -1 ){
						yctr(category);
						trcz("Part");//如果tr没有下拉选的值 不显示table
					}else {
						ReleasetrAndCategory(category,releaseVal)
						trcz("Part");//如果tr没有下拉选的值 不显示table
					}
				}	
			} else {
				tablecz(docid);//显示docment关联table
				if(category.indexOf("all") > -1 ){
					CategorysSelect(qc(ldcategorys(docid)));
					//ReleasesSelect(qc(ldReleases(docid)));
					 
					if(releaseVal.indexOf("all") > -1 ){
						trcz("all");
					}else {
						Releasetr(releaseVal);
						trcz("Part");//如果tr没有下拉选的值 不显示table
					}
				}else {					
					if(releaseVal.indexOf("all") > -1 ){
						yctr(category);
						trcz("Part");
					}else {
						ReleasetrAndCategory(category,releaseVal);
						trcz("Part");
					}
				}
			} 
			 //测试率 通过率
			searchAllTest();

    	};
		
		//Release下拉选绑定事件
		Release.onchange = function(){
			//Category.value = "all";
    		// 通过对象获取value和text
            var Release = this.value;
			var docid = document.getElementById('DocumentID').value;
			var categoryVal = document.getElementById('Category').value;
			if(docid == "all"){
				//显示所有table
				tablecz("all");
				if(Release.indexOf("all") > -1){
					ReleasesSelect(qc(Releases));
					
					if(categoryVal.indexOf("all") > -1 ){
						trcz("all");
					}else {
						yctr(categoryVal);
						trcz("Part");
					}
				}else {
					if(categoryVal.indexOf("all") > -1 ){
						Releasetr(Release);
						trcz("Part");
					}else {
						ReleasetrAndCategory(categoryVal,Release);
						trcz("Part");
					}
				}
			} else {
				tablecz(docid);
			    
				if(Release.indexOf("all") > -1){
					ReleasesSelect(qc(ldReleases(docid)));
					
					if(categoryVal.indexOf("all") > -1 ){
						trcz("all");
					}else {
						yctr(categoryVal);
						trcz("Part");
					}
				}else {
					if(categoryVal.indexOf("all") > -1 ){
						Releasetr(Release);
						trcz("Part");
					}else {
						ReleasetrAndCategory(categoryVal,Release);
						trcz("Part");
					}
				}
			} 
			 
			//测试率
			searchAllTest();	
    	};
	
		

    	if (REPORT_ISSUES == "") {
            document.all.RERUNLINK.href = host + "/im/runreport?selection=&currentReportName";
        } else {
            document.all.RERUNLINK.href = host + "/im/runreport?selection=&currentReportName&issues=" + REPORT_ISSUES;
        }
		
	 //查询测试率
	function searchAllTest(){
		var tables =  document.getElementsByClassName("detailrows");
		var  allCount = 0;
		var  testcount = 0;
		var  passcount = 0;
		for(var j = 0;j<tables.length;j++){
			var tr = tables[j].rows;
			if(tables[j].hidden == false){
				for(var i =0;i<tr.length;i++){
					if(i>0 && tr[i].hidden == false){
						allCount++;
						var test  = tr[i].cells[4].innerHTML;
						var pass  = tr[i].cells[6].innerHTML;
						if(test && test != "" && test > 0){
							testcount++;
						}
						if(test != "" && test >0 && test == pass){
							passcount++;
						}
					}
				}			
			}			
		}
		console.log("testcount : "+testcount)
		console.log("passcount : "+passcount)
		console.log("allCount : "+allCount)
		var PassRage = keepTwoDecimal(testcount,allCount);
		var coverage = keepTwoDecimal(passcount,allCount);
		document.getElementById("AllTest").innerHTML = coverage; //覆盖率
		
		document.getElementById("AllCoverage").innerHTML = PassRage; //通过率
	}
	
	// 保证两位小数
	function keepTwoDecimal(num, num2) {
		var result = num/num2;
		if (isNaN(result)) {  
			return 0;  
		}
		result = parseFloat(result);
		if(result == 1){//如果结果为1，返回100
			return 100;
		}
		return (Math.round(result * 10000) / 100); //小数点后两位百分比
	}
		
    //与docment联动的Categorys下拉选赋值
	function ldcategorys(docid){
		var newCategorys = [];
		for(var i = 0;i<AllCategory.length;i++){
			if(docid.indexOf(AllCategory[i].docIds) > -1 ){
				newCategorys.push(AllCategory[i].categorys);
			}
		}
		return newCategorys;
	} 
	//与docment联动的Releases下拉选赋值
	function ldReleases(docid){
		var newReleases = [];
		for(var i = 0;i<AllRelease.length;i++){
			if(docid.indexOf(AllRelease[i].docIds) > -1){
				newReleases.push(AllRelease[i].Releases);
			}
		}
		return newReleases;
	}

	//Categorys下拉选赋值
	function CategorysSelect( Categorys){
		CategoryData = [];
		for(var i = 0;i<Categorys.length;i++){
			CategoryData.push({"value":Categorys[i],"text":Categorys[i]});
    	}
		CategoryData.unshift({"value":"all","text":"- Please Select -"});		
		selectMultip.reload("Category", CategoryData);
	}
	//Releases下拉选赋值
	function ReleasesSelect( Releases){
		ReleaseData = [];
		for(var i = 0;i<Releases.length;i++){
			var ls = Releases[i];
			if(Releases[i] == " " || Releases[i] == "&nbsp;"){
				ls = "noData";
			}
    		ReleaseData.push({"value":ls,"text":ls});
    	}
		ReleaseData.unshift({"value":"all","text":"- Please Select -"});		
		selectMultip.reload("Release", ReleaseData);	
	}
	
	//满足Release和Category条件的tr
	function ReleasetrAndCategory(Category,Release){
		var tables =  document.getElementsByClassName("detailrows");
		 
		for(var j = 0;j<tables.length;j++){
				var tr = tables[j].rows;
				for(var i =0;i<tr.length;i++){
					if(i>0){
						if(Category.indexOf(tr[i].cells[1].innerHTML) > -1 ||  Release.indexOf(tr[i].cells[2].innerHTML) > -1 ){
							tr[i].hidden = false;
						}else{						
							tr[i].hidden = true;
						}		
					}			
				}
		}
	}
	
	
    //掩藏满足Release条件的tr
	function Releasetr(Release){
		var tables =  document.getElementsByClassName("detailrows");
		for(var j = 0;j<tables.length;j++){
				var tr = tables[j].rows;
				for(var i =0;i<tr.length;i++){
					if(i>0){
						if(Release.indexOf(tr[i].cells[2].innerHTML) > -1 ){
							tr[i].hidden = false;
						}else{						
							tr[i].hidden = true;
						}		
					}			
				}
		}
	}

    //掩藏满足Category条件的tr
	function yctr(Category){
		var tables =  document.getElementsByClassName("detailrows");
		for(var j = 0;j<tables.length;j++){
				var tr = tables[j].rows;
				for(var i =0;i<tr.length;i++){
					if(i>0){
						if(Category.indexOf(tr[i].cells[1].innerHTML) > -1 ){
							tr[i].hidden = false;
						}else{						
							tr[i].hidden = true;
						}		
					}			
				}
		}
	}
	
	//显示隐藏tr 参数为all显示全部tr Part如果tr中没有下拉选数据则不显示table
	function trcz(key){
		var tables =  document.getElementsByClassName("detailrows");
		for(var i = 0;i<tables.length;i++){
			if(key == "all"){
				var tr = tables[i].rows;
				//显示所有的tr
				for(var j =0;j<tr.length;j++){
					tr[j].hidden = false;			
				}
			}else if(key == "Part"){
				var ls = 0;
				var tr = tables[i].rows;
				for(var j =0 ;j<tr.length;j++){
					if(tr[j].hidden == false){
						ls++;
					}
				}		
				if(ls == 1){
					var tabName = tables[i].getAttribute("name");
					document.getElementById(tabName).hidden = true;
					document.getElementById("h2"+tabName).hidden = true;
				}
			}
		}
	}
	

//显示隐藏table和标题  key为all 显示全部table 可以为id只显示选中table
	function tablecz(key) {
		//获取所有的table
        var tables =  document.getElementsByClassName("detailrows");
        for(var i =0;i<tables.length;i++){
            var tabName = tables[i].getAttribute("name");
			if(key == "all"){
				tables[i].hidden = false;
				document.getElementById("h2"+tabName).hidden = false;
			} else if(key.indexOf(tabName) > -1){
                tables[i].hidden = false;
				document.getElementById("h2"+tabName).hidden = false;
            } else {
				tables[i].hidden = true;
				document.getElementById("h2"+tabName).hidden = true;
			}
           
        }
    }
	
    //移除所有字节点
    function removeAll(el) {
    		var childs = el.childNodes;
    		for(var i = childs .length - 1; i >= 0; i--) {
    			el.removeChild(childs[i]);
    		}
    	}
	//数组去重
	function qc(arr){
		var a = [];
		for(var i = 0;i<arr.length;i++){
			if(a.indexOf(arr[i]) == -1){
				a.push(arr[i]);
			}
		}
		return a;
	}

</script>

</body>
</html>
